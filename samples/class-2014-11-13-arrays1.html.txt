<!DOCTYPE html>
<html>
   <head>
      <title>
         Arrays
      </title>
      <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
      <script type="text/javascript">
         function display(msg) {
            document.getElementById("txtDisplay").value += "\n" + msg;
         }

         function init() {
            // Declare grades as an instance of the built-in Array prototype/class.
            var grades = new Array();
            
            // Assign four elements (index 0, 1, 2, and 3) to integer values.
            grades[0] = 94;
            grades[1] = 61;
            grades[2] = 96;
            grades[3] = 100;

            // Display the entire array as a comma-separated string.
            display("grades - all at once:");
            display(grades.toString());
            
            // Display the individual grades one at a time.
            display("\ngrades individually:");
            for (var i = 0; i < grades.length; i++) {
               display("grade " + i + " = " + grades[i]);
            }     
            
            // We can add elements of the same data type to our array.
            grades[4] = 88;

            // We can add elements of the DIFFERENT data types to our array.
            grades[5] = 93.4;
            // Oops! What happened to element/subscript 6. We skipped it. Look at the output carefully.            
            grades[7] = "A+";
            grades[8] = true;

            // Display the entire array (again) as a comma-separated string.
            display("\ngrades - all at once:");
            display(grades.toString());

            // Display the individual grades (again) one at a time.
            display("\ngrades individually:");
            for (var i = 0; i < grades.length; i++) {    // Good thing we used grades.length and not a hard-coded number.
               display("grade " + i + " = " + grades[i]);
            }     
            // Did you notice that grades[6] is undefined. Watch out for that.

            // I wonder... Can we treat a string as an array of characters? Let's see.
            stringExperimentation();
         }         

         function stringExperimentation() {
            // Declare and initialize a string.
            var aString = "This is an uninteresting string.";
            
            // Display the entire string.
            display("\n" + aString);
            
            // Display the individual characters of the string one at a time.
            for (var i = 0; i < aString.length; i++) {
               display(aString[i]);
            }     
            // It looks like we can treat a string as an array of characters. 
            // If that's the case, let's try to modify a single character in that manmner.
            aString[2] = "a";
            aString[3] = "t";  // "This" becomes "That". Or does it?

            // Display the entire string.
            display("\n" + aString);
            
            // No change. 
            // Apparently, we CANNOT modify indivudual characters of a string as if they were array elements.
            // It's like the elements of a string are immutable. Interesting.
            // 
            // So how do we do that? One way is to to create a new string with the changes we want.
            var newString = aString.substring(0,2) + "at" + aString.substring(4, aString.length);
            
            // The substring method of string objects lets us take apart and put together strings piece by piece.
            
            // Display the entire string.
            display("\n" + newString);
         }
      </script>
   </head>
   <body onload="init();">
      <textarea id="txtDisplay" cols="24" rows="32"></textarea>
   </body>
</html>